<head>
    <style>
        /* Estilo para los títulos dentro de card-text */
        .card-text {
            color: #009f48; /* Verde para los títulos */
        }

        /* Estilo para los valores dentro de span */
        .card-text span {
            color: #303655; /* Gris oscuro para los valores */
        }
    </style>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.19/jspdf.plugin.autotable.min.js"></script>


</head>


<!-- controlador para tablas repuestos-->
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const sparePartsSelect = document.getElementById("sparePartsSelect");
        const addSparePartBtn = document.getElementById("addSparePart");
        const sparePartsTable = document.getElementById("sparePartsTable").getElementsByTagName("tbody")[0];
        const sparePartsInput = document.getElementById("sparePartsInput");
        const sparePartQuantity = document.getElementById("sparePartQuantity");


        let selectedSpareParts = []; // Array donde guardaremos los repuestos seleccionados

        // Función para agregar un repuesto a la tabla
        function addSparePart() {
            const selectedOption = sparePartsSelect.options[sparePartsSelect.selectedIndex];
            const quantity = parseInt(sparePartQuantity.value);


            if (!selectedOption.value) {
                alert("Por favor, seleccione un repuesto.");
                return;
            }

            if (quantity <= 0 || isNaN(quantity)) {
                alert("Ingrese una cantidad válida.");
                return;
            }

            const sparePartCode = selectedOption.value;
            const sparePartName = selectedOption.dataset.name;

            // Verificar si el repuesto ya está agregado
            if (selectedSpareParts.some(sp => sp.Code === sparePartCode)) {
                alert("Este repuesto ya fue agregado.");
                return;
            }

            // Agregar repuesto al array
            selectedSpareParts.push({ Code: sparePartCode, Name: sparePartName, Quantity: quantity });

            // Crear una fila en la tabla
            const row = sparePartsTable.insertRow();
            row.setAttribute("data-code", sparePartCode);

            const cell1 = row.insertCell(0);
            cell1.textContent = sparePartCode;

            const cell2 = row.insertCell(1);
            cell2.textContent = sparePartName;

            const cell3 = row.insertCell(2);
            cell3.textContent = quantity;

            const cell4 = row.insertCell(3);
            const deleteBtn = document.createElement("button");
            deleteBtn.textContent = "Eliminar";
            deleteBtn.className = "btn btn-danger btn-sm";
            deleteBtn.onclick = function () {
                removeSparePart(sparePartCode);
            };
            cell4.appendChild(deleteBtn);

            // Actualizar el input oculto con los códigos de repuestos seleccionados
            updateSparePartsInput();
        }

        // Función para eliminar un repuesto de la tabla
        function removeSparePart(code) {
            // Eliminar del array
            selectedSpareParts = selectedSpareParts.filter(sp => sp.Code !== code);

            // Eliminar la fila de la tabla
            const row = sparePartsTable.querySelector(`tr[data-code='${code}']`);
            if (row) {
                row.remove();
            }

            // Actualizar el input oculto
            updateSparePartsInput();
        }

        // Función para actualizar el input oculto con los repuestos seleccionados
        /*function updateSparePartsInput() {
            sparePartsInput.value = JSON.stringify(selectedSpareParts.map(sp => sp.Code));
        }*/
        function updateSparePartsInput() {
            sparePartsInput.value = JSON.stringify(selectedSpareParts);
        }
        // Agregar evento al botón "Agregar Repuesto"
        addSparePartBtn.addEventListener("click", addSparePart);
    });
</script>

<!--fin-->

<!-- controlador para tag de grabador de equipo-->
<!--script type="text/javascript">
  class FunctionController {
    estadoTag(){
      $.ajax({
        url: '/confirmacion',
        type: 'GET',
        dataType: 'json',
        success: function(resultado) {
            console.log('Respuesta recibida:', resultado);
          let EstadoTag = $('#EstadoTag');
          EstadoTag.html(JSON.stringify(resultado));
          if (resultado.detectado == "si"){
            console.log('Código detectado: si - habilitando botón');
            document.getElementById('btnRegistroEquipo').disabled = false;
          } else {
            console.log('Código detectado distinto de "si":', resultado.detectado);
            alert('Error en la confirmación');
            document.getElementById('btnRegistroEquipo').disabled = true;
          }
          EstadoTag.html(resultado)
        }
      })
    }
  }
  functionController = new FunctionController();
</script-->
<!--script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
  class FunctionController {
    estadoTag() {
      $.ajax({
        url: '/confirmacion',
        type: 'GET',
        dataType: 'json',
        success: function(resultado) {
          console.log('Respuesta recibida:', resultado);
          let EstadoTag = $('#EstadoTag');
          EstadoTag.html(resultado.detectado);

          if (resultado.detectado && resultado.detectado !== 'error' && resultado.detectado !== '') {
            console.log('Código detectado:', resultado.detectado);
            // Por ejemplo, si quieres habilitar botón solo si detectado es distinto de error
            document.getElementById('btnRegistroEquipo').disabled = false;
          } else {
            console.log('No se detectó código válido');
            alert('Error en la confirmación');
            document.getElementById('btnRegistroEquipo').disabled = true;
          }
        },
        error: function(xhr, status, error) {
          console.error('Error en AJAX:', error);
          alert('Error en la consulta');
          document.getElementById('btnRegistroEquipo').disabled = true;
        }
      });
    }
  }

  // Instancia y llamada de ejemplo
  const functionController = new FunctionController();

  // Puedes llamar periódicamente para actualizar estado:
  setInterval(() => {
    functionController.estadoTag();
  }, 3000); // cada 3 segundos
</script-->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
  class FunctionController {
    estadoTag() {
      $.ajax({
        url: '/confirmacion',
        type: 'GET',
        dataType: 'json',
        success: function(resultado) {
          console.log('Respuesta recibida:', resultado);
          let EstadoTag = $('#EstadoTag');
          EstadoTag.html(resultado.detectado);

          if (resultado.detectado && resultado.detectado !== 'error' && resultado.detectado !== '') {
            console.log('Código detectado:', resultado.detectado);
            document.getElementById('btnRegistroEquipo').disabled = false;
          } else {
            console.log('No se detectó código válido');
            // Mejor solo mensaje en consola
            document.getElementById('btnRegistroEquipo').disabled = true;
          }
        },
        error: function(xhr, status, error) {
          console.error('Error en AJAX:', error);
          alert('Error en la consulta');
          document.getElementById('btnRegistroEquipo').disabled = true;
        }
      });
    }
  }

  // Instanciamos el controlador para poder llamar a la función
  const functionController = new FunctionController();

  // Opcional: podrías hacer que se ejecute cada cierto tiempo para actualizar el estado
  // setInterval(() => functionController.estadoTag(), 3000);

</script>


<div class="main-content">
    <div class="section__content section__content--p30"> 
        <div class="container-fluid">
            <div class="table-data__tool">     
                <a href="#" data-toggle="modal" data-target="#modalAppointment" class="au-btn au-btn-icon au-btn--green au-btn--small">
                <i class="zmdi zmdi-plus"></i>Añadir Equipo</a>
                <a href="/equipment/search" class="au-btn au-btn-icon au-btn--blue au-btn--small">
                <i class="zmdi zmdi-search"></i>Buscar Equipo</a>
                 <!-- Botón para exportar a PDF -->
                <button id="exportPDF" class="au-btn au-btn-icon au-btn--orange au-btn--small">
                    <i class="zmdi zmdi-file-text"></i>Exportar a PDF
                </button>

            </div>
        {{#if hasEquipments}}  
            <div class="row">
            {{#each equipments }}    
                <div class="col-md-4">
                    <div class="card" style="width: auto;">
                        <img class="card-img-top" src="images/{{this.Image}}" alt="Card image cap" style="height: 250px;">
                        <div class="card-body">
                            <div class="card-text">Código: <span>{{ this.Code }}</span></div>
                            <div class="card-text">Nombre: <span>{{ this.Name }}</span></div>
                            <div class="card-text">Modelo: <span>{{ this.Model}}</span></div>
                            <div class="card-text">Número de Serie: <span>{{ this.SerialNumber }}</span></div>
                            <div class="card-text">Localización: <span>{{ this.Location }}</span></div>
                            <div class="card-text">Departamento: <span>{{ this.DepartmentName }}</span></div>
                           

                        </div>
                        <div class="table-data-feature">
                            <a href="/equipment/edit/{{ this.Code }}" class="item" data-toggle="tooltip" data-placement="top" title="Editar" >
                                <i class="zmdi zmdi-edit"></i>
                            </a>
                            <a href="/equipment/delete/{{ this.Code }}" class="item" data-toggle="tooltip" data-placement="top" title="Eliminar">
                                <i class="zmdi zmdi-delete"></i>
                            </a>
                             <a href="/report/equipment/installation/{{ this.Code }}" class="item" data-toggle="tooltip" data-placement="top" title="Más">
                                <i class="zmdi zmdi-more"></i>
                            </a>
                        </div>
                    </div>
                </div>
            {{/each}} 
            </div>
        {{/if }} 

        </div>
    </div>
</div>
<script>
    document.getElementById('exportPDF').addEventListener('click', function() {
        // Crear una nueva instancia de jsPDF
        const { jsPDF } = window.jspdf;
        const doc = new jsPDF();

        // Añadir título al PDF
        doc.setFontSize(18);
        doc.text("Listado de Equipos", 14, 20);

        // Extraer los datos de las tarjetas de equipo
        const rows = [];
        document.querySelectorAll('.card-body').forEach(function(card) {
            const row = [];
            const cardTexts = card.querySelectorAll('.card-text span');

            // Verificamos si hay al menos 7 elementos para evitar errores
            if (cardTexts.length >= 7) {
                row.push(cardTexts[0].innerText); // Código
                row.push(cardTexts[1].innerText); // Nombre
                row.push(cardTexts[2].innerText); // Modelo
                row.push(cardTexts[3].innerText); // Número de serie
                row.push(cardTexts[4].innerText); // Localización
                row.push(cardTexts[5].innerText); // Departamento
                rows.push(row);
            }
        });

        // Agregar la tabla al PDF
        doc.autoTable({
            head: [['Código', 'Nombre', 'Modelo', 'Número de Serie', 'Localización', 'Departamento']],
            body: rows,
            startY: 30 // Para dejar espacio entre el título y la tabla
        });

        // Guardar el PDF generado
        doc.save('equipos.pdf');
    });
</script>

        <!-- END PAGE CONTAINER-->    
<!-- POPUP-->
<div class="modal fade" id="modalAppointment" tabindex="-1" role="dialog" aria-labelledby="modalAppointmentLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
          
          <div class="modal-body">
            <form method="POST" action="/equipment/add" enctype="multipart/form-data">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
                </button>
                <div class="login-logo">
                    <img src="images/LogoMedical.png" alt="Logo" />
                </div>
                <div class="login-form">
                        <div class="form-group">
                            <label class=" form-control-label">Código Activo</label>
                            <input type="text" required name="Code" placeholder="Codigo de AF" class="form-control">
                        </div>
                        <div class="form-group">
                            <label class=" form-control-label">Nombre</label>
                            <input type="text"required name="Name" placeholder="Descripción del equipo" class="form-control">
                        </div>
                        <! añadido 18/05/25 para seleccionar el tipo de equipo para traer valores para GE ->
                         <div class="form-group">
                            <label class=" form-control-label">Tipo de Equipo</label>
                            <select name="NameEquipmentId"required id="select" class="form-control">
                                {{#each Types}}
                                    <option value="{{this.id}}">{{this.name}}</option>
                                {{/each}}
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="ModelId">Modelo:</label>
                            <select name="ModelId" id="ModelId" required class="form-control">
                                <option value="">Seleccione un modelo</option>
                                {{#each Models}}
                                    <option value="{{this.id}}">{{this.Model}}</option>
                                {{/each}}
                            </select>
                        </div>
                        
                        <div class="form-group">
                            <label class=" form-control-label">Numero de Serie</label>
                            <input type="text"required name="SerialNumber" placeholder="Ingresa numero de serie" class="form-control">
                        </div>
                        <div class="form-group">
                            <label class="form-control-label">Marca</label>
                            <select name="BrandId" required class="form-control">
                                <option value="" disabled selected>Seleccione una marca</option>
                                {{#each Brands}}
                                <option value="{{this.id_brand}}">{{this.Brand}}</option>
                                {{/each}}
                            </select>
                        </div>

                        <div class="form-group">
                            <label class=" form-control-label">Foto</label>
                            <input type="file"  name="image" placeholder="Seleccione un archivo" class="form-control">
                        </div>
                        <div class="form-group">
                            <label class=" form-control-label">Costo del equipo en Bolivianos</label>
                            <input type="number"required name="Cost" placeholder="Ingrese el costo en Bs.-" class="form-control">
                        </div>
                        <div class="form-group">
                            <label class=" form-control-label">Fecha de Entrega</label>
                            <input type="date"required name="ArrivalDate" placeholder="Fecha de entrega a la clinica" class="form-control">
                        </div>
                       <div class="form-group">
                            <label class=" form-control-label">Fecha de Instalación</label>
                            <input type="date"required name="InstallationDate" placeholder="Ingrese fecha de intalación" class="form-control">
                        </div>
                        <div class="form-group">
                            <label class=" form-control-label">Fecha de culminación de Garantía</label>
                            <input type="date"required name="WarrantyDate" placeholder="Fecha de fin de garantía" class="form-control">
                        </div>
                        <div class="form-group">
                            <label for="DepartmentCode">Departamento</label>
                            <select id="DepartmentCode" name="DepartmentCode" class="form-control" required>
                                <option value="">Seleccione un departamento</option>
                                {{#each departments}}
                                <option value="{{this.Code}}">{{this.Name}}</option>
                                {{/each}}
                            </select>
                        </div>
                        <div class="form-group">
                            <label class=" form-control-label">Ubicación</label>
                            <input type="text" required name="Location" placeholder="Ingrese la ubicación" class="form-control">
                        </div>
                        <div class="form-group">
                            <label class=" form-control-label">Proveedor</label>
                            <select name="Agent"required id="select" class="form-control">
                                {{#each Agents}}
                                    <option value="{{this.Id}}">{{this.Name}} {{this.Id}} </option>
                                {{/each}}
                            </select>
                        </div>
                                           
                        <!añadido en 02/03/25->
                        <div class="form-group">
                            <label class=" form-control-label">Software</label>
                            <select name="Software" required id="select" class="form-control">
                                    <option value="Si" {{#if Si}} selected {{/if}} >Si</option>
                                    <option value="No" {{#if No}} selected {{/if}}>No</option> 
                            </select>
                        </div>   

                        <div class="form-group">
                            <label class=" form-control-label">Versión de Software</label>
                            <input type="text" name="SoftwareVersion" placeholder="Ingrese versión SW" value="{{ equipment.SoftwareVersion }}" class="form-control">
                        </div> 

                        <div class="form-group">
                            <label class=" form-control-label">Contraseña del Software</label>
                            <input type="text" name="SoftwarePass" placeholder="Ingrese contraseña de SW" value="{{ equipment.SoftwarePass }}" class="form-control">
                        </div> 

                        <div class="form-group">
                            <label class=" form-control-label">Conexion IP</label>
                            <input type="text" name="NetworkAddress" placeholder="Ingrese IP" value="{{ equipment.NetworkAddress }}" class="form-control">
                        </div> 

                        <! añadido en 18/05/25 ->
                        <div class="form-group">
                            <label class=" form-control-label">Antecedentes Falla</label>
                            <select name="FailureRecord" id="select" class="form-control">
                                    <option value="-1">Insignificante</option>
                                    <option value="-2">Mínimo</option> 
                                    <option value="0">Usual</option>
                                    <option value="1">Moderado</option> 
                                    <option value="2">Significativo</option>
                            </select>
                        </div>
                        <! hasta aqui ->
                        
                        <div class="form-group">
                            <label class=" form-control-label">Estado Activo</label>
                            <select name="AssetStatus" id="select" class="form-control">
                                    <option value="Activo">Activo</option>
                                    <option value="No Activo">No Activo</option> 
                                    <option value="Baja">Baja</option> 
                            </select>
                        </div>   
                        
                        <!añadido en 06/05/25->

                        <div class="form-group">
                            <label class="form-control-label">Fecha Inicial del Activo:</label>
                            <input type="date" class="form-control" name="AssetInitialDate" required>
                        </div>

                       <!-- Estado de Recepción -->
                        <label for="ReceptionStatus">Estado de Recepción:</label>
                        <select name="ReceptionStatusId" id="ReceptionStatus" class="form-control">
                        {{#each receptionStatuses}}
                            <option value="{{this.Id}}">{{this.Name}}</option>
                        {{/each}}
                        </select>

                        <!-- Tipo de Adquisición -->
                        <label for="AcquisitionType">Tipo de Adquisición:</label>
                        <select name="AcquisitionType" id="AcquisitionType" class="form-control">
                        {{#each acquisitionTypes}}
                            <option value="{{this.Id}}">{{this.Name}}</option>
                        {{/each}}
                        </select>

                        <div class="form-group">
                            <label class=" form-control-label">Estado del Seguro</label>
                            <select name="InsuranceStatus" id="select" class="form-control">
                                    <option value="Activo">Activo</option>
                                    <option value="No Activo">No Activo</option> 
                            </select>
                        </div>

                        <div class="form-group">
                            <label for="InsuranceInitialDate">Fecha Inicial del Seguro:</label>
                            <input type="date" class="form-control" name="InsuranceInitialDate" required>
                        </div>

                        <div class="form-group">
                            <label class=" form-control-label">Estado Equipo</label>
                            <select name="FuntionalStatus" id="select" class="form-control">
                                    <option value="Funcionando">Funcionando</option>
                                    <option value="Reparación">Reparación</option> 
                                    <option value="En espera de repuesto">En espera de repuesto</option> 
                                    <option value="Con Proveedor">Con el Proveedor</option>
                                    <option value="Sin Consumible">Sin consumible</option> 
                                    <option value="Plan contingencia">Contingencia</option> 
                            </select>
                        </div>
                        <!añadido 03/03/25 ->
                       <label for="spareParts">Seleccionar Rep/acc/insumo:</label>
                        <select id="sparePartsSelect" class="form-control">
                            <option value="">-- Selecciona un Rep/Acc/Ins --</option>
                            {{#each spareParts}}
                                <option value="{{this.Code}}" data-name="{{this.Name}}">{{this.Name}}</option>
                            {{/each}}
                        </select>
                        <!-- Campo para ingresar cantidad -->
                        <input type="number" id="sparePartQuantity" class="form-control" placeholder="Cantidad" min="1" value="1" style="width: 100px; display: inline-block; margin-left: 10px;">

                        <button type="button" id="addSparePart" class="btn btn-primary">Agregar</button>

                        <!-- Tabla donde se mostrarán los repuestos seleccionados -->
                        <h3>Rep/Acc/ins Seleccionados:</h3>
                        <table class="table" id="sparePartsTable">
                            <thead>
                                <tr>
                                    <th>Código</th>
                                    <th>Nombre</th>
                                    <th>Cantidad</th>
                                    <th>Acción</th>
                                </tr>
                            </thead>
                            <tbody>
                                <!-- Aquí se llenarán los repuestos seleccionados dinámicamente -->
                            </tbody>
                        </table>

                        <!-- Input oculto para enviar los repuestos seleccionados -->
                        <input type="hidden" id="sparePartsInput" name="spareParts" value="[]">

                        <!-- input type="hidden" name="spareParts" id="sparePartsInput">
                        <! -->

                         <div class="form-group">
                            <label class=" form-control-label">Notas</label>
                            <textarea type="text"  name="Notes" placeholder="Any Notes" class="form-control"></textarea>
                        </div>
                        <div class="form-group">
                            <input class="btn btn-primary form-control" type="button" value="Listo" style="width: 150px;" onclick="functionController.estadoTag()"/>
                            <br />
                            <div id="EstadoTag"></div>
                        </div>
                        <div class="form-group formu2">
                            <input id="btnRegistroEquipo" type="submit" value="Agregar nuevo equipo" class="btn btn-primary" disabled="true"/>
                        </div>

                        <button class="au-btn au-btn--block au-btn--green m-b-20" type="submit">Añadir</button>
                </div>
            </form>
          </div>  
        </div>
    </div>     
</div>   
